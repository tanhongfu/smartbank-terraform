digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_autoscaling_attachment.asg_attachment_api (expand)" [label = "aws_autoscaling_attachment.asg_attachment_api", shape = "box"]
		"[root] aws_autoscaling_attachment.asg_attachment_react (expand)" [label = "aws_autoscaling_attachment.asg_attachment_react", shape = "box"]
		"[root] aws_autoscaling_group.api_asg (expand)" [label = "aws_autoscaling_group.api_asg", shape = "box"]
		"[root] aws_autoscaling_group.react_asg (expand)" [label = "aws_autoscaling_group.react_asg", shape = "box"]
		"[root] aws_db_instance.saturn_db (expand)" [label = "aws_db_instance.saturn_db", shape = "box"]
		"[root] aws_db_subnet_group.saturn_db_subnet_group (expand)" [label = "aws_db_subnet_group.saturn_db_subnet_group", shape = "box"]
		"[root] aws_eip.ngw_eip (expand)" [label = "aws_eip.ngw_eip", shape = "box"]
		"[root] aws_internet_gateway.igw (expand)" [label = "aws_internet_gateway.igw", shape = "box"]
		"[root] aws_launch_template.saturn_api_lt (expand)" [label = "aws_launch_template.saturn_api_lt", shape = "box"]
		"[root] aws_launch_template.saturn_react_lt (expand)" [label = "aws_launch_template.saturn_react_lt", shape = "box"]
		"[root] aws_lb.alb (expand)" [label = "aws_lb.alb", shape = "box"]
		"[root] aws_lb_listener.api_listener (expand)" [label = "aws_lb_listener.api_listener", shape = "box"]
		"[root] aws_lb_listener.react_listener (expand)" [label = "aws_lb_listener.react_listener", shape = "box"]
		"[root] aws_lb_target_group.api_tg (expand)" [label = "aws_lb_target_group.api_tg", shape = "box"]
		"[root] aws_lb_target_group.react_tg (expand)" [label = "aws_lb_target_group.react_tg", shape = "box"]
		"[root] aws_nat_gateway.saturn_ngw (expand)" [label = "aws_nat_gateway.saturn_ngw", shape = "box"]
		"[root] aws_route_table.private_rt (expand)" [label = "aws_route_table.private_rt", shape = "box"]
		"[root] aws_route_table.rt (expand)" [label = "aws_route_table.rt", shape = "box"]
		"[root] aws_route_table_association.private_rt_association (expand)" [label = "aws_route_table_association.private_rt_association", shape = "box"]
		"[root] aws_route_table_association.private_rt_association2 (expand)" [label = "aws_route_table_association.private_rt_association2", shape = "box"]
		"[root] aws_route_table_association.public_rt_association (expand)" [label = "aws_route_table_association.public_rt_association", shape = "box"]
		"[root] aws_route_table_association.public_rt_association2 (expand)" [label = "aws_route_table_association.public_rt_association2", shape = "box"]
		"[root] aws_security_group.sg (expand)" [label = "aws_security_group.sg", shape = "box"]
		"[root] aws_subnet.private (expand)" [label = "aws_subnet.private", shape = "box"]
		"[root] aws_subnet.private2 (expand)" [label = "aws_subnet.private2", shape = "box"]
		"[root] aws_subnet.public (expand)" [label = "aws_subnet.public", shape = "box"]
		"[root] aws_subnet.public2 (expand)" [label = "aws_subnet.public2", shape = "box"]
		"[root] aws_vpc.saturn_vpc (expand)" [label = "aws_vpc.saturn_vpc", shape = "box"]
		"[root] data.aws_ami.aws_linux_2 (expand)" [label = "data.aws_ami.aws_linux_2", shape = "box"]
		"[root] module.ec2_instance.aws_instance.this (expand)" [label = "module.ec2_instance.aws_instance.this", shape = "box"]
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" [label = "module.ec2_instance.aws_spot_instance_request.this", shape = "box"]
		"[root] output.private_subnet_id" [label = "output.private_subnet_id", shape = "note"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] var.ami" [label = "var.ami", shape = "note"]
		"[root] var.db_password" [label = "var.db_password", shape = "note"]
		"[root] var.db_username" [label = "var.db_username", shape = "note"]
		"[root] var.instance_type" [label = "var.instance_type", shape = "note"]
		"[root] var.lb_type" [label = "var.lb_type", shape = "note"]
		"[root] var.private_subnet2_cidr" [label = "var.private_subnet2_cidr", shape = "note"]
		"[root] var.private_subnet_cidr" [label = "var.private_subnet_cidr", shape = "note"]
		"[root] var.public_subnet2_cidr" [label = "var.public_subnet2_cidr", shape = "note"]
		"[root] var.public_subnet_cidr" [label = "var.public_subnet_cidr", shape = "note"]
		"[root] var.region" [label = "var.region", shape = "note"]
		"[root] var.sg_ports" [label = "var.sg_ports", shape = "note"]
		"[root] var.vpc_cidr" [label = "var.vpc_cidr", shape = "note"]
		"[root] aws_autoscaling_attachment.asg_attachment_api (expand)" -> "[root] aws_autoscaling_group.api_asg (expand)"
		"[root] aws_autoscaling_attachment.asg_attachment_react (expand)" -> "[root] aws_autoscaling_group.react_asg (expand)"
		"[root] aws_autoscaling_group.api_asg (expand)" -> "[root] aws_launch_template.saturn_api_lt (expand)"
		"[root] aws_autoscaling_group.api_asg (expand)" -> "[root] aws_lb_target_group.api_tg (expand)"
		"[root] aws_autoscaling_group.api_asg (expand)" -> "[root] aws_subnet.private2 (expand)"
		"[root] aws_autoscaling_group.react_asg (expand)" -> "[root] aws_launch_template.saturn_react_lt (expand)"
		"[root] aws_autoscaling_group.react_asg (expand)" -> "[root] aws_lb_target_group.react_tg (expand)"
		"[root] aws_autoscaling_group.react_asg (expand)" -> "[root] aws_subnet.private2 (expand)"
		"[root] aws_db_instance.saturn_db (expand)" -> "[root] aws_db_subnet_group.saturn_db_subnet_group (expand)"
		"[root] aws_db_instance.saturn_db (expand)" -> "[root] aws_security_group.sg (expand)"
		"[root] aws_db_instance.saturn_db (expand)" -> "[root] var.db_password"
		"[root] aws_db_instance.saturn_db (expand)" -> "[root] var.db_username"
		"[root] aws_db_subnet_group.saturn_db_subnet_group (expand)" -> "[root] aws_subnet.private (expand)"
		"[root] aws_db_subnet_group.saturn_db_subnet_group (expand)" -> "[root] aws_subnet.private2 (expand)"
		"[root] aws_eip.ngw_eip (expand)" -> "[root] local.Name (expand)"
		"[root] aws_eip.ngw_eip (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_internet_gateway.igw (expand)" -> "[root] aws_vpc.saturn_vpc (expand)"
		"[root] aws_launch_template.saturn_api_lt (expand)" -> "[root] aws_security_group.sg (expand)"
		"[root] aws_launch_template.saturn_api_lt (expand)" -> "[root] aws_subnet.private (expand)"
		"[root] aws_launch_template.saturn_api_lt (expand)" -> "[root] data.aws_ami.aws_linux_2 (expand)"
		"[root] aws_launch_template.saturn_api_lt (expand)" -> "[root] var.instance_type"
		"[root] aws_launch_template.saturn_react_lt (expand)" -> "[root] aws_security_group.sg (expand)"
		"[root] aws_launch_template.saturn_react_lt (expand)" -> "[root] aws_subnet.private (expand)"
		"[root] aws_launch_template.saturn_react_lt (expand)" -> "[root] data.aws_ami.aws_linux_2 (expand)"
		"[root] aws_launch_template.saturn_react_lt (expand)" -> "[root] var.instance_type"
		"[root] aws_lb.alb (expand)" -> "[root] aws_security_group.sg (expand)"
		"[root] aws_lb.alb (expand)" -> "[root] aws_subnet.public (expand)"
		"[root] aws_lb.alb (expand)" -> "[root] aws_subnet.public2 (expand)"
		"[root] aws_lb.alb (expand)" -> "[root] var.lb_type"
		"[root] aws_lb_listener.api_listener (expand)" -> "[root] aws_lb.alb (expand)"
		"[root] aws_lb_listener.api_listener (expand)" -> "[root] aws_lb_target_group.api_tg (expand)"
		"[root] aws_lb_listener.react_listener (expand)" -> "[root] aws_lb.alb (expand)"
		"[root] aws_lb_listener.react_listener (expand)" -> "[root] aws_lb_target_group.react_tg (expand)"
		"[root] aws_lb_target_group.api_tg (expand)" -> "[root] aws_vpc.saturn_vpc (expand)"
		"[root] aws_lb_target_group.react_tg (expand)" -> "[root] aws_vpc.saturn_vpc (expand)"
		"[root] aws_nat_gateway.saturn_ngw (expand)" -> "[root] aws_eip.ngw_eip (expand)"
		"[root] aws_nat_gateway.saturn_ngw (expand)" -> "[root] aws_subnet.public (expand)"
		"[root] aws_route_table.private_rt (expand)" -> "[root] aws_nat_gateway.saturn_ngw (expand)"
		"[root] aws_route_table.rt (expand)" -> "[root] aws_internet_gateway.igw (expand)"
		"[root] aws_route_table_association.private_rt_association (expand)" -> "[root] aws_route_table.private_rt (expand)"
		"[root] aws_route_table_association.private_rt_association (expand)" -> "[root] aws_subnet.private (expand)"
		"[root] aws_route_table_association.private_rt_association2 (expand)" -> "[root] aws_route_table.private_rt (expand)"
		"[root] aws_route_table_association.private_rt_association2 (expand)" -> "[root] aws_subnet.private2 (expand)"
		"[root] aws_route_table_association.public_rt_association (expand)" -> "[root] aws_route_table.rt (expand)"
		"[root] aws_route_table_association.public_rt_association (expand)" -> "[root] aws_subnet.public (expand)"
		"[root] aws_route_table_association.public_rt_association2 (expand)" -> "[root] aws_route_table.rt (expand)"
		"[root] aws_route_table_association.public_rt_association2 (expand)" -> "[root] aws_subnet.public2 (expand)"
		"[root] aws_security_group.sg (expand)" -> "[root] aws_vpc.saturn_vpc (expand)"
		"[root] aws_security_group.sg (expand)" -> "[root] var.sg_ports"
		"[root] aws_subnet.private (expand)" -> "[root] aws_vpc.saturn_vpc (expand)"
		"[root] aws_subnet.private (expand)" -> "[root] var.private_subnet_cidr"
		"[root] aws_subnet.private2 (expand)" -> "[root] aws_vpc.saturn_vpc (expand)"
		"[root] aws_subnet.private2 (expand)" -> "[root] var.private_subnet2_cidr"
		"[root] aws_subnet.public (expand)" -> "[root] aws_vpc.saturn_vpc (expand)"
		"[root] aws_subnet.public (expand)" -> "[root] var.public_subnet_cidr"
		"[root] aws_subnet.public2 (expand)" -> "[root] aws_vpc.saturn_vpc (expand)"
		"[root] aws_subnet.public2 (expand)" -> "[root] var.public_subnet2_cidr"
		"[root] aws_vpc.saturn_vpc (expand)" -> "[root] local.Name (expand)"
		"[root] aws_vpc.saturn_vpc (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] aws_vpc.saturn_vpc (expand)" -> "[root] var.vpc_cidr"
		"[root] data.aws_ami.aws_linux_2 (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.arn (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.capacity_reservation_specification (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.id (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.instance_state (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.ipv6_addresses (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.outpost_arn (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.password_data (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.primary_network_interface_id (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.private_dns (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.private_ip (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.public_dns (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.public_ip (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.spot_bid_status (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.spot_instance_id (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.spot_request_state (expand)"
		"[root] module.ec2_instance (close)" -> "[root] module.ec2_instance.output.tags_all (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.local.is_t_instance_type (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.ami (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.associate_public_ip_address (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.availability_zone (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.capacity_reservation_specification (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.cpu_core_count (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.cpu_credits (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.cpu_threads_per_core (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.create (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.create_spot_instance (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.disable_api_termination (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.ebs_block_device (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.ebs_optimized (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.enable_volume_tags (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.enclave_options_enabled (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.ephemeral_block_device (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.get_password_data (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.hibernation (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.host_id (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.iam_instance_profile (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.instance_initiated_shutdown_behavior (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.ipv6_address_count (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.ipv6_addresses (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.key_name (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.launch_template (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.metadata_options (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.monitoring (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.name (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.network_interface (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.placement_group (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.private_ip (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.root_block_device (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.secondary_private_ips (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.source_dest_check (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.subnet_id (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.tags (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.tenancy (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.timeouts (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.user_data (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.user_data_base64 (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.volume_tags (expand)"
		"[root] module.ec2_instance.aws_instance.this (expand)" -> "[root] module.ec2_instance.var.vpc_security_group_ids (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.local.is_t_instance_type (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.ami (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.associate_public_ip_address (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.availability_zone (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.capacity_reservation_specification (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.cpu_core_count (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.cpu_credits (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.cpu_threads_per_core (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.create (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.create_spot_instance (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.disable_api_termination (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.ebs_block_device (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.ebs_optimized (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.enable_volume_tags (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.enclave_options_enabled (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.ephemeral_block_device (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.get_password_data (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.hibernation (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.host_id (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.iam_instance_profile (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.instance_initiated_shutdown_behavior (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.ipv6_address_count (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.ipv6_addresses (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.key_name (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.launch_template (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.metadata_options (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.monitoring (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.name (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.network_interface (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.placement_group (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.private_ip (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.root_block_device (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.secondary_private_ips (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.source_dest_check (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_block_duration_minutes (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_instance_interruption_behavior (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_launch_group (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_price (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_type (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_valid_from (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_valid_until (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.spot_wait_for_fulfillment (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.subnet_id (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.tags (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.tenancy (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.timeouts (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.user_data (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.user_data_base64 (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.volume_tags (expand)"
		"[root] module.ec2_instance.aws_spot_instance_request.this (expand)" -> "[root] module.ec2_instance.var.vpc_security_group_ids (expand)"
		"[root] module.ec2_instance.local.is_t_instance_type (expand)" -> "[root] module.ec2_instance.var.instance_type (expand)"
		"[root] module.ec2_instance.output.arn (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.arn (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.capacity_reservation_specification (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.capacity_reservation_specification (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.id (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.id (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.instance_state (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.instance_state (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.ipv6_addresses (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.outpost_arn (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.outpost_arn (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.password_data (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.password_data (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.primary_network_interface_id (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.primary_network_interface_id (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.private_dns (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.private_dns (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.private_ip (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.private_ip (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.public_dns (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.public_dns (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.public_ip (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.public_ip (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.spot_bid_status (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.spot_instance_id (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.spot_request_state (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.output.tags_all (expand)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] module.ec2_instance.output.tags_all (expand)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] module.ec2_instance.var.ami (expand)" -> "[root] data.aws_ami.aws_linux_2 (expand)"
		"[root] module.ec2_instance.var.ami (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.associate_public_ip_address (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.availability_zone (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.capacity_reservation_specification (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.cpu_core_count (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.cpu_credits (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.cpu_threads_per_core (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.create (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.create_spot_instance (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.disable_api_termination (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.ebs_block_device (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.ebs_optimized (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.enable_volume_tags (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.enclave_options_enabled (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.ephemeral_block_device (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.get_password_data (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.hibernation (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.host_id (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.iam_instance_profile (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.instance_initiated_shutdown_behavior (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.instance_type (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.instance_type (expand)" -> "[root] var.instance_type"
		"[root] module.ec2_instance.var.ipv6_address_count (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.ipv6_addresses (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.key_name (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.launch_template (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.metadata_options (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.monitoring (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.name (expand)" -> "[root] local.Name (expand)"
		"[root] module.ec2_instance.var.name (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.network_interface (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.placement_group (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.private_ip (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.root_block_device (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.secondary_private_ips (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.source_dest_check (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_block_duration_minutes (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_instance_interruption_behavior (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_launch_group (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_price (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_type (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_valid_from (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_valid_until (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.spot_wait_for_fulfillment (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.subnet_id (expand)" -> "[root] aws_subnet.public (expand)"
		"[root] module.ec2_instance.var.subnet_id (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.tags (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.tenancy (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.timeouts (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.user_data (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.user_data_base64 (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.volume_tags (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] module.ec2_instance.var.vpc_security_group_ids (expand)" -> "[root] aws_security_group.sg (expand)"
		"[root] module.ec2_instance.var.vpc_security_group_ids (expand)" -> "[root] module.ec2_instance (expand)"
		"[root] output.private_subnet_id" -> "[root] aws_subnet.private (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_autoscaling_attachment.asg_attachment_api (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_autoscaling_attachment.asg_attachment_react (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_db_instance.saturn_db (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_lb_listener.api_listener (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_lb_listener.react_listener (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route_table_association.private_rt_association (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route_table_association.private_rt_association2 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route_table_association.public_rt_association (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] aws_route_table_association.public_rt_association2 (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.ec2_instance.aws_instance.this (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.ec2_instance.aws_spot_instance_request.this (expand)"
		"[root] root" -> "[root] module.ec2_instance (close)"
		"[root] root" -> "[root] output.private_subnet_id"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
		"[root] root" -> "[root] var.ami"
		"[root] root" -> "[root] var.region"
	}
}

